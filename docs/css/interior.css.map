{"version":3,"sources":["../../src/scss/mixins/_baseline.scss","../../src/scss/partials/_image.scss","../../src/scss/partials/_buttons.scss","../../src/scss/theme-interior/_code.scss","../../src/scss/theme-interior/_variables.scss","../../src/scss/functions/_vertical-rhythm.scss","../../src/scss/theme-interior/_base.scss","../../src/scss/partials/_variables.scss","../../src/scss/theme-interior/_typography.scss","../../src/scss/theme-interior/partials/_measuring-system.scss","../../src/scss/theme-interior/mixins/_body.scss","../../src/scss/theme-interior/_layout.scss","../../src/scss/mixins/_gridCSS-overlay.scss","../../src/scss/theme-interior/partials/_grid-overlay.scss","../../src/scss/theme-interior/partials/_posts-nav.scss","../../src/scss/theme-interior/partials/_header.scss","../../src/scss/theme-interior/partials/_footer.scss","../../src/scss/theme-interior/partials/_image-link.scss","../../src/scss/theme-interior/mixins/_headings.scss"],"names":[],"mappings":"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","file":"interior.css","sourcesContent":["// -----------------------------------------------------------------------------\n// Mixin â€” Baseline\n// -----------------------------------------------------------------------------\n@mixin baseline(\n  $font-size: $font-base,\n  $font-weight: false,\n  $font-style: false,\n  $text-transform: false,\n  $unit: 1,\n  $line-height: ($line-height-base * $unit),\n  $margin: 0,\n  $above: 0,\n  $below: 0,\n  $top: ((cap-height($font-size))+($above*$base-line-unit)),\n  $padding-top: $top,\n  $padding-bottom: null,\n  $margin-bottom: (($base-line-unit - $top)+($below*$base-line-unit)),\n  $margin-top: ($margin * $base-line-unit),\n  $margin-only: false,\n  $no-text: false\n) {\n  @if $no-text == false {\n    font-size: $font-size;\n    line-height: $line-height;\n  }\n  @if $font-weight != false {\n    font-weight: $font-weight;\n  }\n  @if $font-style != false {\n    font-style: $font-style;\n  }\n  @if $text-transform != false {\n    text-transform: $text-transform;\n  }\n  @if $margin-only != false {\n    $margin-top: $top;\n  }\n  padding-top: $padding-top;\n  padding-bottom: $padding-bottom;\n  margin-top: $margin-top;\n  margin-bottom: $margin-bottom;\n}\n\n@mixin baseline-grid(\n  $grid-color: $grid-color,\n  $grid-bg: $grid-bg,\n  $grid-bg-size: $grid-bg-size\n) {\n  @at-root {\n    html {\n      position: relative;\n    }\n  }\n  &::before {\n      content: \"\";\n      width: 100%;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      z-index: 2;\n      mix-blend-mode: multiply;\n      background:\n        linear-gradient($grid-color 0, transparent 1px) 0 0 / 100vw 1rem repeat-y,\n        linear-gradient(rgba($grid-color, 0.5) 0, transparent 1px) 0 0.5rem / 100vw 0.5rem repeat-y;\n      pointer-events: none;\n    }\n}\n","// -----------------------------------------------------------------------------\n// Image\n// -----------------------------------------------------------------------------\n\n%fluid-img {\n  max-width: 100%;\n  height: auto;\n  display: block;\n}\n\nimg {\n  @extend %fluid-img;\n}\n\n.container > img {\n  align-self: center;\n  @include baseline(\n    $font-size: $font-base,\n    $no-text: true,\n    $margin: 2\n  );\n}\n\n.item > img {\n  align-self: center;\n}\n\np + img {\n  @include baseline(\n    $no-text: true,\n    $above: .4,\n    $below: .4\n  );\n}\n\n.image-box svg {\n  max-width: 100%;\n}\n",".button-grid-toggle {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  padding: .5rem .75rem;\n  background: #ff7070;\n  border: none;\n  box-shadow: 0px 2px 0px #000000, 0px 1px 0px #fff inset;\n  border-radius: .4rem 0 0;\n  color: #fff;\n\n  @media(min-width: ($screen-small + 60px)) {\n    position: fixed;\n  }\n}\n","// -----------------------------------------------------------------------------\n// Code\n// -----------------------------------------------------------------------------\n\ncode, pre {\n\twhite-space: pre;\n}\n\npre {\n\ttab-size: 4;\n\t code {\n\t\tbackground: $brand-color-mid;\n\t\tdisplay: block;\n\t\tpadding-left: $horizontal-space;\n\t\tpadding-right: $horizontal-space;\n\t\toverflow: auto;\n\t\t-webkit-overflow-scrolling: touch;\n\t}\n}\n\npre.code-block::before {\n\tcontent: attr(rel);\n  background: $brand-color-3;\n  display: block;\n  color: $brand-color-2;\n  text-transform: uppercase;\n  font-family: $font-monospace;\n\tfont-size: .65rem;\n\tfont-weight: bold;\n\tletter-spacing: .15rem;\n}\n\ncode {\n\tbackground: rgba($brand-color-1, 0.1);\n}\n\n// Code block font styles\n.comment {\n\tcolor: $mid-gray;\n}\n\npre {\n  @include baseline(\n\t\t$no-text: true,\n\t\t$margin: 1,\n\t\t$padding-top: 0,\n\t\t$below: 0\n\t);\n}\n\npre:before {\n  @include baseline(\n\t\t$font-size: $english,\n\t\t$line-height: 1.5\n\t);\n  // Use mixin but override unwanted parts\n  margin-bottom: 0;\n  padding-left: 1rem;\n  padding-bottom: .05rem;\n}\n\n.code-inline {\n  line-height: 1;\n  font-family: $font-family-inline-code;\n  font-weight: normal;\n}\n\ncode:not(.code-inline) {\n  @include baseline(\n\t\t$font-size: $augustin,\n\t\t$line-height: 2,\n\t\t$above: .5,\n\t\t$margin-bottom: 0\n\t);\n\tpadding-bottom: font-scale(1);\n}\n","// -----------------------------------------------------------------------------\n// Variables\n// -----------------------------------------------------------------------------\n\n//** Colours\n//\n// Brand colours (base colours)\n$brand-color-1: #FF7070 !default;\n$brand-color-2: #FFF !default;\n$brand-color-3: #555 !default;\n$brand-color-4: #000 !default;\n\n// Colour variants\n$nobg: transparent !default;\n$brand-color-lightest: hsla(hue($brand-color-2),100,100,0.75) !default;\n$brand-color-light: lighten($brand-color-1, 25) !default;\n$brand-color-mid: hsla(hue($brand-color-1),100,85,0.2) !default;\n$darkbg: $brand-color-3 !default;\n\n// Grayscale\n$base-gray: #000 !default;\n$dark-gray: lighten($base-gray, 10%) !default;\n$mid-gray: lighten($base-gray, 60%) !default;\n$light-gray: lighten($base-gray, 90%) !default;\n$gray-4: #CCC !default;\n\n// Font colours\n$font-color-1: $brand-color-1 !default;\n$font-color-2: $brand-color-2 !default;\n$font-color-3: $brand-color-3 !default;\n$font-color-4: $brand-color-4 !default;\n\n// Link colours\n$link-color: $font-color-1 !default;\n\n//** Borders\n$light-border: 1px solid $brand-color-3 !default;\n$mid-border: .1rem solid $brand-color-4 !default;\n\n$posts-nav-border: $mid-border;\n\n//** Footer\n$footer-border-width: 1px !default;\n\n//** Grid\n$grid-color: $brand-color-1 !default;\n$grid-bg: transparent !default;\n\n//** Fonts\n//\n// Default font units, required for functions amongst other things.\n$font-base: 1rem !default;\n$serif-cap-height: 0.66 !default;\n","// -----------------------------------------------------------------------------\n// Function â€” Vertical Rhythm\n// -----------------------------------------------------------------------------\n\n// Calculate the unit of line-height, as opposed to the unitless value - useful for other caclulations.\n@function line-height($ratio, $font-size: $font-base, $line-height: $line-height-base) {\n  @return $font-size * $line-height * $ratio;\n}\n\n// Calculate vertical space for the rhythm based on cap height and other variables\n@function cap-height($font-size, $line-height: $line-height-base, $cap-height: $cap-height) {\n  @return $font-size * ($line-height - $cap-height) / 2;\n}\n\n// This is for creating scalable font sizes based upon variables\n@function font-scale($scale, $font-size: $font-base) {\n  @return $font-size * $scale;\n}\n","// -----------------------------------------------------------------------------\n// Base\n// -----------------------------------------------------------------------------\n\n// Reset\nhtml {\n box-sizing: border-box;\n // Allow the baseline grid overlay to fill the viewport height.\n min-height: 100%;\n}\n\n*, *::before, *::after {\n box-sizing: inherit;\n margin: 0;\n}\n\n// Baseline grid\nbody {\n  line-height: $font-base;\n  font-size: $font-base;\n  -webkit-text-size-adjust: 100%;\n  font-family: $font-family-base;\n}\n\nhtml,\nbody,\nfigure {\n  margin: 0;\n  padding: 0;\n}\n\na {\n  &,\n  &:link,\n  &:focus,\n  &:hover {\n    color: $link-color;\n  }\n}\n\n.hidden {\n  display: none;\n}\n","// -----------------------------------------------------------------------------\n// Variables\n// -----------------------------------------------------------------------------\n\n//** Fonts\n//\n// Default font units, required for functions amongst other things.\n$font-base: 1rem !default;\n$line-height-base: 1 !default;\n$base-line-unit: $font-base*$line-height-base !default;\n$helvetica-cap-height: 0.68 !default\n$serif-cap-height: 0.66 !default\n$cap-height: $helvetica-cap-height !default;\n$font-size-body: $font-base !default;\n\n// Font weights\n$font-weight-border-with-content: bold !default\n\n// Font families\n$font-system: -apple-system, BlinkMacSystemFont, \"Roboto\", \"Droid Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n$font-sans-serif: \"Helvetica Neue\", Helvetica, Arial, sans-serif !default;\n$font-serif: serif, georgia !default;\n$font-monospace: \"Inconsolata\", monospace, courier !default;\n\n// Apply font families to generic variables\n$font-family-base: $font-sans-serif !default;\n$font-family-headings: $font-system !default;\n$font-family-inline-code: $font-monospace !default;\n\n$light-border: 1px solid #555 !default;\n\n//** Grid\n$grid-color: red !default;\n$grid-bg: transparent !default;\n$grid-bg-size: 100vw .5rem !default;\n\n//** Spacing\n//\n// Default spacing units\n$vertical-space: font-scale(3) !default;\n$horizontal-space: font-scale(2) !default;\n$vertical-space-small: $vertical-space / 4 !default;\n$horizontal-space-small: $horizontal-space / 2 !default;\n$m: $horizontal-space !default;\n\n// Grid gaps\n$grid-row-gap-1: 1rem !default;\n$grid-row-gap-2: 2rem !default;\n\n$grid-column-gap-1: 2rem !default;\n$grid-column-gap-2: 3rem !default;\n\n$grid-gap-1: $grid-row-gap-1 $grid-column-gap-1 !default;\n$grid-gap-2: $grid-row-gap-2 $grid-column-gap-2 !default;\n\n// Grid rows\n$grid-row-base: 24rem !default;\n$grid-row-1: (($grid-row-base - $grid-row-gap-1) / 2) !default;\n$grid-row-2: $grid-row-base !default;\n\n// Gutters\n$grid-gutter: $horizontal-space !default;\n\n//** Images\n//\n// Image sizes\n$main-image-height-1: (($grid-row-1 * 3) + ($grid-row-gap-1 * 2));\n$main-image-height-2: (($grid-row-2 * 2) + ($grid-row-gap-2 ));\n\n//** Widths\n//\n// Layout widths (min-width)\n$width-small: 600px !default;\n$width-medium: 912px !default;\n$width-large: 1260px !default;\n$width-larger: 1584px !default;\n\n//** Screens - widths plus margin\n//\n// Screen widths (min-width)\n$screen-smallest: 400px !default;\n$screen-smaller: 540px !default;\n$screen-small: 648px !default;\n$screen-medium: 978px !default;\n$screen-large: 1332px !default;\n$screen-larger: 1656px !default;\n\n// Screen widths (max-width)\n$screen-smaller-max: ($screen-smaller)-1 !default;\n$screen-small-max: ($screen-small)-1 !default;\n$screen-medium-max: ($screen-medium)-1 !default;\n$screen-large-max: ($screen-large)-1 !default;\n$screen-larger-max: ($screen-larger)-1 !default;\n","// -----------------------------------------------------------------------------\n// Typography\n// -----------------------------------------------------------------------------\n\nhtml {\n  font-size: 75%; // Set the html font-size to 12px.\n}\n\nbody {\n font-kerning: normal;\n}\n\nh1 {\n  @include heading-1();\n\n  @media(min-width: $screen-large) {\n    @include heading-1-large();\n  }\n}\n\nh2, h3 {\n  @include heading-3();\n}\n\nh4, h5, h6 {\n  @include heading-6();\n}\n\nh6 {\n  //text-transform: uppercase;\n}\n\np {\n  @include body-1();\n\n  @media(min-width: $screen-large) {\n    @include body-2();\n  }\n}\n\n.lead {\n  @include body-3();\n\n  @media(min-width: $screen-small) {\n    @include body-4();\n  }\n}\n\n.passage {\n  orphans: 1;\n\n    // All margin and padding is removed from passage contents, baseline is\n    // therefore applied to passage for aligment\n    @media(min-width: $screen-larger) {\n        @include baseline(\n            $no-text: true\n        );\n    }\n}\n\n.passage p,\n.passage br,\n.unit-conversion p {\n  @include small-1();\n  margin: 0;\n  padding: 0;\n\n  @media(min-width: $screen-larger) {\n    @include body-3();\n    margin: 0;\n    padding: 0;\n  }\n}\n\n.passage > {\n  h2, h3 {\n  @include heading-3();\n\n    @media(min-width: $screen-larger) {\n      @include heading-2();\n    }\n  }\n}\n\n.passage > :first-child {\n  column-span: all;\n}\n\n.passage > h4 {\n  padding-top: 0;\n  margin-bottom: 0;\n\n  @include heading-6();\n\n  @media(min-width: $screen-larger) {\n    @include heading-4();\n  }\n}\n\n.passage > h6 {\n  padding-top: 0;\n  margin-bottom: 0;\n\n  @include heading-8();\n\n  @media(min-width: $screen-larger) {\n    @include heading-7();\n  }\n}\n\n.passage p + h4,\n.passage ul + h4,\n.passage blockquote + h4 {\n  @media(min-width: $screen-large) {\n    margin-top: 1.5rem;\n  }\n}\n\n.passage h3 + h4,\n.passage h4 + h6 {\n  column-span: all;\n}\n\n.intro {\n  @include body-2();\n\n  @media(min-width: $screen-large) {\n    @include body-3();\n  }\n}\n\n.small {\n  @include small-1();\n}\n\nblockquote {\n  p, cite {\n    font-style: oblique;\n  }\n\n  p {\n    &::before {\n      content: \"\\2018\";\n    }\n    &::after {\n      content: \"\\2019\";\n    }\n  }\n\n  cite::before {\n    content: \"\\2014  \"\n  }\n}\n\nblockquote cite,\nblockquote[cite]::after {\n  content: \"\\2014  \"attr(cite);\n  font-style: oblique;\n  font-size: $pica;\n  margin-top: .5rem;\n  display: block;\n  text-indent: $grid-column-gap-2;\n}\n\nh2 + blockquote {\n  margin-bottom: 2rem;\n}\n\n.passage .unit-conversion {\n  display: grid;\n  grid-template-columns: 1fr 4rem 1fr;\n\n  > p {\n    //text-align: center;\n    //margin: 0;\n    padding: .98rem 0;\n\n    &:nth-child(3n+2) {\n      text-align: center;\n    }\n\n    &:nth-child(3n+1) {\n      text-align: right;\n    }\n\n    &:not(:nth-child(9),:nth-child(8),:nth-child(7)) {\n      border-bottom: .1rem solid $gray-4;\n    }\n  }\n}\n\n.passage {\n  li > span {\n    @include small-1();\n    padding-top: 0;\n    margin-bottom: 0;\n\n    @media(min-width: $screen-larger) {\n      @include body-3();\n      padding-top: 0;\n    }\n  }\n\n  ol, ul {\n    padding: 0;\n    margin: 0;\n  }\n\n  ul, ol {\n      @media(min-width: $screen-larger) {\n        font-size: $mittel;\n        line-height: $mittel;\n      }\n  }\n\n  ul ul {\n    // Indent the second level of each <ul>\n    padding-left: $augustin;\n  }\n}\n\nbody {\n  counter-reset: figure;\n}\n\nfigcaption {\n  @include small-2();\n  &::before {\n    counter-increment: figure;\n    content: \"Figure \" counter(figure)\" â€” \";\n  }\n}\n","$measuring-systems: (\n  // The following is based on the measure when applied to a grid\n  // more of a Typographic measuring system than modular scale.\n  // html font-size at 75%\n  system-1: (\n      double-paragon: 5rem, //60px\n    two-line-pica: 3.833rem, //46px\n      double-pica: 3.5rem, //42px\n    paragon: 2.5rem, //30px\n      great-primer: 2rem, //24px\n    augustin: 1.667rem, // 20px\n      mittel: 1.5rem, //18px\n    english: 1.333rem, //16px\n      pica: 1.167rem, //14px\n    philosophy: 1rem //12px\n  )\n);\n\n// html font-size at 87.5%\n$system-1: map-get($measuring-systems, system-1);\n\n  $double-paragon: map-get($system-1, double-paragon);\n  $two-line-pica: map-get($system-1, two-line-pica);\n  $double-pica: map-get($system-1, double-pica);\n  $paragon: map-get($system-1, paragon);\n  $great-primer: map-get($system-1, great-primer);\n  $augustin: map-get($system-1, augustin);\n  $mittel: map-get($system-1, mittel);\n  $english: map-get($system-1, english);\n  $pica: map-get($system-1, pica);\n  $philosophy: map-get($system-1, philosophy);\n","// Opting for @include over @extend here.\n\n@mixin body-1() {\n  @include baseline(\n    $font-size: $english, //16px\n    $line-height: 2rem,\n    $above: .45,\n    $below: 0\n  );\n}\n\n@mixin body-2() {\n  @include baseline(\n    $font-size: $mittel, //18px\n    $line-height: 2rem,\n    $above: .45,\n    $below: 0\n  );\n}\n\n@mixin body-3() {\n  @include baseline(\n    $font-size: $augustin, //20px\n    $line-height: 2.5rem,\n    $above: .5,\n    $below: 0\n  );\n}\n\n@mixin body-4() {\n  @include baseline(\n    $font-size: $great-primer, //24px\n    $line-height: 3rem,\n    $above: .5,\n    $below: 0\n  );\n}\n\n@mixin small-1() {\n  @include baseline(\n    $font-size: $english, //16px\n    $line-height: 2rem,\n    $above: 0.2,\n    $below: 0\n  );\n}\n\n@mixin small-2() {\n  @include baseline(\n    $font-size: $pica, //14px\n    $line-height: 1.5rem,\n    $above: 0,\n    $below: -.7\n  );\n}\n","body {\n  display: grid;\n  width: 100%;\n  grid-template-areas: \"header\" \"main\" \"footer\";\n  grid-template-rows: 8rem minmax(100vh, auto) 1fr;\n  grid-row-gap: $grid-row-gap-1;\n}\n\n.container {\n  margin-left: 1.5rem;\n  margin-right: 1.5rem;\n\n  @media(min-width: $screen-smallest) {\n    margin-left: $grid-column-gap-1;\n    margin-right: $grid-column-gap-1;\n  }\n\n  @media(min-width: $screen-small) {\n    width: $width-small;\n  }\n\n  @media(min-width: $screen-medium) {\n    width: $width-medium;\n  }\n\n  @media(min-width: $screen-large) {\n    width: $width-large;\n    margin-left: $grid-column-gap-2;\n    margin-right: $grid-column-gap-2;\n  }\n\n  @media(min-width: $screen-larger) {\n    width: $width-larger;\n  }\n}\n\n.main-header {\n  grid-area: header;\n\n  .container {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: $grid-column-gap-1;\n    margin-top: $grid-column-gap-1;\n\n    @media(min-width: $screen-large) {\n      grid-gap: $grid-gap-2;\n    }\n  }\n}\n\n.main-article {\n  grid-area: main;\n  min-height: 100%;\n  display: grid;\n\n  main {\n    //min-height: 100%; // Causes horrendous bug in Chrome.\n  }\n}\n\n.main-footer {\n  grid-area: footer;\n  align-self: end;\n\n  .container {\n    display: grid;\n    grid-template-columns: repeat(6, 1fr);\n    grid-template-rows: auto;\n  }\n}\n\n.footer-at-end {\n  // Position the footer always at the bottom, regardless of how much content\n  // there is.\n  display: grid;\n}\n","// -----------------------------------------------------------------------------\n// Mixin â€” gridCSS-overlay()\n// -----------------------------------------------------------------------------\n// This is what creates the overlay used to align columns for use with Interior.\n// -----------------------------------------------------------------------------\n\n@mixin gridCSS-overlay(\n  $grid-medium: repeat(3, 1fr),\n  $grid-large: repeat(4, 1fr),\n  $grid-larger: repeat(5, 1fr),\n  $grid-gap: $grid-gap-1,\n  $grid-gap-large: $grid-gap-2\n) {\n  main {\n    position: relative;\n  }\n  .grid-overlay {\n    display: none;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    z-index: 2;\n    overflow: hidden;\n  }\n  /*\n  * Getting the proportions correct and allowing enough rows to cover\n  * excess height\n  *\n  * To get to 296px width the parent container (grid overlay) must be at a\n  * width of 1256px, with for columns with a gutter of 24px.\n  *\n  * In the case of the rows, 16rem is as near as I can get using a rem\n  * unit to the designed unit of 296px\n  */\n  .grid-visible .master-grid {\n      width: 100%;\n      pointer-events: none;\n      grid-template-rows: repeat(30, $grid-row-1);\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n\n      grid-gap: $grid-gap;\n\n      @media(min-width: $screen-large) {\n        grid-template-rows: repeat(30, $grid-row-2);\n        grid-gap: $grid-gap-large;\n      }\n\n      & > div {\n        border: 1px solid;\n      }\n  }\n  @media(min-width: $screen-medium) {\n    .grid-visible .master-grid {\n          grid-template-columns: $grid-medium;\n      }\n  }\n  @media(min-width: $screen-large) {\n    .grid-visible .master-grid {\n          grid-template-columns: $grid-large;\n      }\n  }\n  @media(min-width: $screen-larger) {\n    .grid-visible .master-grid {\n          grid-template-columns: $grid-larger;\n      }\n  }\n}\n","@include gridCSS-overlay(\n  $grid-larger: 21.143rem .5fr .5fr 21.143rem 21.143rem 21.143rem\n);\n","@media(min-height: 30rem) {\n  .posts-nav-section {\n    position: sticky;\n    bottom: 0;\n    background: rgba($brand-color-2, .9);\n    margin-top: 2rem;\n  }\n}\n\n.posts-nav {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: $grid-column-gap-1;\n\n  .prev::before,\n  .next::after {\n    content: \"\";\n    border-top: $posts-nav-border;\n    border-left: $posts-nav-border;\n    width: 1.5rem;\n    height: 1.5rem;\n    grid-row: span 2;\n    align-self: center;\n  }\n\n  .prev::before {\n    transform: rotate(-45deg);\n  }\n\n  .next::after {\n    transform: rotate(135deg);\n    justify-self: flex-end;\n  }\n\n  a {\n    display: grid;\n    grid-template-rows: auto 1fr;\n    grid-column-gap: $grid-column-gap-1 / 2;\n    text-decoration: none;\n    text-transform: capitalize;\n    color: inherit;\n\n    @include baseline(\n      $font-size: $pica,\n      $line-height: 1.5rem,\n      $above: 1.25,\n      $below: 1.75\n    );\n\n    &.prev {\n      grid-template-columns: 1rem 1fr;\n\n      > span {\n        grid-column: 2;\n      }\n    }\n\n    &.next {\n      grid-template-columns: 1fr 1rem;\n      grid-column: 2;\n\n      > span {\n        grid-column: 1;\n        text-align: right;\n      }\n    }\n\n    > span:first-child {\n      font-weight: bold;\n    }\n\n    > span:last-child {\n      grid-row: 2;\n    }\n\n    &:hover::before,\n    &:hover::after {\n      border-color: inherit;\n    }\n  }\n}\n",".main-header {\n  background: $brand-color-2;\n}\n\n.main-header nav {\n  text-align: right;\n  grid-column: 2;\n  grid-row: 1;\n}\n\n.main-header nav a {\n  &:not(:last-child) {\n    margin-right: $horizontal-space-small;\n  }\n\n  @include body-1();\n\n  @media(min-width: $screen-large) {\n    @include body-2();\n  }\n\n  // Cascade over the previous ruleset's line-height\n  @media(min-width: $screen-small) {\n    line-height: 3rem;\n  }\n}\n\n.main-header .home-link svg {\n  width: 8rem; // gives a computed height of 28px (1:4)\n\n  @media(max-width: $screen-small-max) {\n    margin-bottom: .5rem; // balances vertical rhythm with this width\n  }\n\n  @media(min-width: $screen-small) {\n    width: 10rem; // gives a computed height of 35px (1:4)\n  }\n}\n","\n\n.sig {\n  @include baseline(\n    $margin: 1,\n    $above: 1,\n    $below: 1\n  );\n  border-top: 1px solid #ff7070;\n  grid-column: 1 / span 6;\n}\n",".image-link span {\n  @include image-link-heading();\n\n  color: $brand-color-4;\n  counter-increment: default-counter;\n\n  @media(max-width: $screen-smaller-max) {\n    margin-top: -.25rem;\n  }\n\n  &::before {\n    content: counter(default-counter)\" \";\n    border-bottom: .14rem solid $brand-color-1;\n    text-align: center;\n    width: auto;\n    margin-right: .5rem;\n    padding-bottom: .25rem;\n  }\n}\n","// Opting for @include over @extend here.\n\n@mixin heading-1() {\n  @include baseline(\n    $font-size: $paragon, //30px\n    $font-weight: bold,\n    $line-height: 3rem,\n    $above: 0.25,\n    $below: 2\n  );\n}\n\n@mixin heading-1-large() {\n  @include baseline(\n    $font-size: $double-paragon, // 50px\n    $font-weight: bold,\n    $line-height: 6rem,\n    $above: 0.75,\n    $below: 2\n  );\n}\n\n@mixin heading-2() {\n  @include baseline(\n    $font-size: $great-primer, //24px\n    $font-weight: bold,\n    $line-height: 3rem,\n    $above: .33,\n    $below: 1,\n    $margin: -1\n  );\n}\n\n@mixin heading-3() {\n  @include baseline(\n    $font-size: $mittel, //18px\n    $font-weight: bold,\n    $line-height: 2rem,\n    $above: .25,\n    $below: 1,\n    $margin: -.5\n  );\n}\n\n@mixin heading-4() {\n  @include baseline(\n      $font-size: $augustin, // 20px\n      $line-height: 2.5rem,\n      $above: .65,\n      $below: 0\n  );\n}\n\n@mixin heading-5() {\n  @include baseline(\n    $font-size: $great-primer, //24px\n    $font-weight: bold,\n    $line-height: 1.25,\n    $above: .2,\n    $margin: 0,\n    $below: .1\n  );\n}\n\n@mixin heading-6() {\n  @include baseline(\n    $font-size: $english, //16px\n    $font-weight: bold,\n    $line-height: 2rem,\n    $above: .9,\n    $below: 0,\n    $margin: 0\n  );\n}\n\n@mixin heading-7() {\n  @include baseline(\n    $font-size: $english, //16px\n    $text-transform: uppercase,\n    $font-weight: bold,\n    $line-height: 2rem,\n    $above: .65,\n    $below: 0,\n    $margin: 1\n  );\n}\n\n@mixin heading-8() {\n  @include baseline(\n    $font-size: $philosophy, //12px\n    $text-transform: uppercase,\n    $font-weight: bold,\n    $line-height: 2rem,\n    $above: .65,\n    $below: 0,\n    $margin: 0\n  );\n}\n\n@mixin image-link-heading {\n  @include baseline(\n    $font-size: $pica, //14px\n    $font-weight: bold,\n    $line-height: 1.5rem,\n    $margin: .75\n  );\n}\n"]}