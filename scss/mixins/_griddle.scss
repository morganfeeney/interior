// TO DO --> Create a feature which allows the use of inline-block or float, or flex (if easy enough)

// Loop through a number of sequentially numbered divs from 1 to $columns //

@mixin griddle(
	$grid-cols,
	$grid-gutter-width: 16px,
	$grid-names: false,
	$grid-alignment: left
) {
	$columns: $grid-cols;
	@for $column from 1 through $columns {
	  .grid-col-#{$column} {
	    width: 100% / $grid-cols * $column;
	    padding: $grid-gutter-width / 2;

	    // if $grid-names == true in demoGrid display the class name //
	    @if $grid-names == true {
				& > .inner {
					&:before {
						content: '#{$column}';
						margin: auto;
					}
				}
			}
		}
	}
	.nested {
		&-outer {
			padding: 0;
		}
		&-inner-bg {
			padding: $grid-gutter-width / 2;
		}
	}

	// if $grid-alignment == left, right or center: display accordingly //
	@if $grid-alignment == left {
		[class*=grid-col] {
			@include gridAlignment(left);
		}
	}
	@else if $grid-alignment == right {
		[class*=grid-col] {
			@include gridAlignment(right);
		}
	}
	@else if $grid-alignment == center {
		[class*=grid-col] {
			@include gridAlignment(center);
		}
	}
}

@mixin gridAlignment($align) {
	@if $align == 'left' {
		$align: left;
		float: $align;
	}
	@else if $align == 'right' {
		$align: right;
		float: $align;
	} 
	@else if $align == 'center' {
		display: block;
		margin: auto;
	}
}
