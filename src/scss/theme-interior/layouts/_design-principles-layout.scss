.design-principles-layout {
  main {
    display: grid;
    grid-gap: $grid-gap-small;

    @media(min-width: $screen-large) {
      grid-gap: $grid-gap-large;
    }
  }

  main > section {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-rows: minmax(10rem, auto);
    grid-gap: $grid-gap-small;

    @media(min-width: $screen-large) {
      grid-template-columns: repeat(4, 1fr);
      grid-auto-rows: minmax(21rem, auto);
      grid-gap: $grid-gap-large;
    }
  }

  h1, h2 {
    grid-column: span 1;

    @media(min-width: $screen-large) {
      grid-column: span 2;
    }
  }

  h1 {
    align-self: flex-end;

    @media(max-width: $screen-large-max) {
      grid-row: 1 / span 4;
    }
  }

  h2, h3 {
    display: block;
    column-span: all;
    margin-top: -1rem; // Align to the top of the grid cell.
  }

  .main-image {
    grid-column: span 2;
    align-self: flex-start; // Safari misaligns the image without this.
    grid-row: span 4;

    @media(min-width: $screen-large) {
      grid-row: span 2;
    }

    @media(max-width: $screen-large-max) {
      object-fit: cover;
      height: 43rem;
      width: 100%;
      object-position: top left;
    }
  }

  .passage {
    grid-column: span 2;
  }

  section:nth-child(1) .passage {
    @media(min-width: $screen-large) {
      grid-row: 2 / span 2;
    }
  }

  section:nth-of-type(2) .passage {
    grid-row: 1 / span 1;
  }

  .passage {
    @media(min-width: $screen-large) {

    }
    columns: 2;
    // orphans: 3;
    column-gap: $grid-column-gap;

    // @media(min-width: $screen-large) {
    //   column-gap: $grid-row-gap-large;
    // }

    p {
      break-inside: avoid-column;

      @supports not (break-inside: avoid-column) {
        display: inline-grid;
      }
    }
  }

  .type-system {
    grid-column: 3 / span 2;
  }
}
