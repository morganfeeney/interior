@import "../variables";
@import "../../partials/variables";
@import "../../mixins/gridCSS-overlay";

@include gridCSS-overlay(
  $grid-larger: 21.143rem .5fr .5fr 21.143rem 21.143rem 21.143rem
);

main {
  display: grid;
  grid-gap: $grid-gap-large; // Used to align headings between sections.
}

main > section {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: minmax(10rem, auto);
  grid-gap: $grid-gap-small;

  @media(min-width: $screen-medium) {
      grid-template-columns: repeat(3, 1fr);
  }

  @media(min-width: $screen-large) {
    grid-template-columns: repeat(4, 1fr);
    grid-auto-rows: minmax(21rem, auto);
    grid-gap: $grid-gap-large;
  }

  @media(min-width: $screen-larger) {
    grid-template-columns: repeat(5, 1fr);
  }
}

h1, h2 {
  grid-column: span 1;

  @media(min-width: $screen-large) {
    grid-column: span 2;
  }

  @media(min-width: $screen-larger) {
    grid-column: span 3;
  }
}

h1 {

align-self: flex-end;

  @media(max-width: $screen-large-max) {
    grid-row: 1 / span 3;
  }

  @media(max-width: $screen-medium-max) {
    grid-row: 2;
    align-self: flex-start;
    margin-top: -1.5rem;
  }

  @media(max-width: $screen-smaller-max) {
      grid-column: span 2;
  }
}

h2, h3 {
  display: block;
  column-span: all;
  //margin-top: -1rem; // Align to the top of the grid cell.
}

.main-image {
    grid-column: 2 / span 1;
    grid-row: span 1;

  align-self: flex-start; // Safari misaligns the image without this.

  @media(min-width: $screen-medium) {
      grid-column: span 2;
      grid-row: span 3;
  }

  @media(min-width: $screen-large) {
    grid-row: span 2;
  }
}

section:nth-child(1) .passage {
  @media(min-width: $screen-large) {
    grid-row: 2 / span 2;
  }
}

section:nth-of-type(2) .passage {
  grid-row: 1 / span 1;

  @media(min-width: $screen-smaller) and (max-width: $screen-large-max) {
    grid-column: span 1;
    columns: 1
  }
}

.passage {
    grid-column: span 2;

    @media(min-width: $screen-smaller) {
      columns: 2;
      column-gap: $grid-column-gap;
    }

  @media(min-width: $screen-larger) {
    grid-column: span 3;
  }
}

.type-system {
    grid-column: span 2;
    @media(min-width: $screen-smaller) {
      grid-column: 2 / span 1;
  }

  @media(min-width: $screen-large) {
    grid-column: 3 / span 2;
  }

  @media(min-width: $screen-larger) {
    grid-column: 4 / span 2;
  }
}
