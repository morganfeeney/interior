:root {
  /* Spacing */
  --horizontal-space: 1rem;
  --vertical-space: 1rem;

  /* Container widths */
  --container-width-1: 100vw;
  --container-width-2: 320px;
  --container-width-3: 360px;
  --container-width-4: 375px;
  --container-width-5: 414px;
  --container-width-6: 568px;
  --container-width-7: 640px;
  --container-width-8: 667px;
  --container-width-9: 768px;
  --container-width-10: 1024px;
  --container-width-11: 1360px;
  --container-width-12: 1600px;

  --margin-1: 1rem;
  --margin-2: 1.5rem;

  /*
   * Base units for calculating dimensions and spacial units.
   */
  --grid-gap-half: .5rem;
  --grid-gap: 1rem;
  --grid-gap-double: 2rem;
  --margin: var(--margin-1);
  --margin-double: calc(var(--margin) * 2);
  --c-width: var(--container-width-2);

  /*
   * Variables that are used to create the Master Grid.
   */

  --grid-columns-320: 4;
  --grid-columns-360: 4;
  --grid-columns-414: 6;
  --grid-columns-768: 12;
  --grid-columns-1024: 16;
  --grid-columns-1360: 16;

  --row-height-320: 4.5rem; /* 72px */
  --row-height-360: 4.5rem;
  --row-height-414: 4.5rem;
  --row-height-768: 4.5rem;
  --row-height-1024: 4.5rem;
  --row-height-1360: 6rem; /* 96px */

  --columns: var(--grid-columns-320);
  --grid-gap-subtraction: calc(var(--grid-gap) * calc(var(--columns) - 1)); /* Removes a gutter from the calculation */
  --container-width: calc(var(--c-width) - var(--margin-double));
  --column-width: calc((var(--container-width) - var(--grid-gap-subtraction)) / var(--columns));

  --row-height: var(--rh);

  /* Create some succinct variables for use with motherload */
  --c: var(--column-width);
  --m: var(--margin);
  --g: var(--grid-gap);
  --rh: var(--row-height-320);

  /* The only thing that changes is the number of columns, otherwise the structure is identical */
  --container-grid-template:
    [margin-start]
    1fr
    var(--m)
    [container-grid-start]
    var(--c) repeat(var(--container-column-count), var(--g) var(--c))
    [container-grid-end]
    var(--m)
    1fr
    [margin-end];

  --container-column-count-320: 3;
  --container-column-count-360: 3;
  --container-column-count-414: 5;
  --container-column-count-768: 11;
  --container-column-count-1024: 15;
  --container-column-count-1360: 15;

  --container-grid: var(--container-grid-template);
  --container-column-count: var(--container-column-count-320);
  --container-column-span: container-grid;
}

@media (min-width: 360px) {
  :root {
    --c-width: var(--container-width-3);
    --rh: var(--row-height-360);
    --columns: var(--grid-columns-360);
    --container-column-count: var(--container-column-count-360);
  }
}

@media (min-width: 414px) {
  :root {
    --c-width: var(--container-width-5);
    --rh: var(--row-height-414);
    --columns: var(--grid-columns-414);
    --container-column-count: var(--container-column-count-414);
  }
}

@media (min-width: 768px) {
  :root {
    --margin: var(--margin-1);
    --rh: var(--row-height-768);
    --c-width: var(--container-width-9);
    --columns: var(--grid-columns-768);
    --column-span-1: 1 / span 6;
    --container-column-count: var(--container-column-count-768);
  }
}

@media (min-width: 1024px) {
  :root {
    --rh: var(--row-height-1024);
    --c-width: var(--container-width-10);
    --columns: var(--grid-columns-1024);
    --container-column-count: var(--container-column-count-1024);
  }
}

@media (min-width: 1360px) {
  :root {
    --rh: var(--row-height-1360);
    --c-width: var(--container-width-11);
    --columns: var(--grid-columns-1360);
    --container-column-count: var(--container-column-count-1360);
  }
}

.container-grid {
  display: grid;
  grid-template-columns: var(--container-grid);
  padding: 0;
  margin: 0;
  grid-row-gap: var(--baseline);
}

.grid {
  grid-column: var(--container-column-span);
  display: grid;
  grid-column-gap: var(--grid-gap);
  grid-row-gap: var(--baseline);
  grid-template-columns: [grid-start] repeat(var(--columns), var(--column-width)) [grid-end];
}
