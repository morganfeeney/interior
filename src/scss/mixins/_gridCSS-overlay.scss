// -----------------------------------------------------------------------------
// Mixin â€” gridCSS-overlay()
// -----------------------------------------------------------------------------
// This is what creates the overlay used to align columns for use with Interior.
// -----------------------------------------------------------------------------

@mixin gridCSS-overlay() {
  main {
    position: relative;
  }
  .grid-overlay {
    display: none;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    z-index: 2;
    overflow: hidden;
  }
  /*
  * Getting the proportions correct and allowing enough rows to cover
  * excess height
  *
  * To get to 296px width the parent container (grid overlay) must be at a
  * width of 1256px, with for columns with a gutter of 24px.
  *
  * In the case of the rows, 16rem is as near as I can get using a rem
  * unit to the designed unit of 296px
  */
  .grid-visible .master-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(30, 294px);
      grid-gap: 1rem 1.333rem;
      width: 100%;
      pointer-events: none;

      @media(max-width: 400px) {
        grid-template-rows: repeat(30, 140px);
      }

      @media(min-width: 1366px) {
        grid-template-rows: repeat(30, 288px);
      }

      & > div {
        border: 1px solid;
      }
  }
  @media(min-width: 1366px) {
    .grid-visible .master-grid {
          grid-template-columns: repeat(4, 1fr);
      }
  }
  @media(min-width: 1920px) {
    .grid-visible .master-grid {
          grid-template-columns: repeat(5, 1fr);
      }
  }
}
