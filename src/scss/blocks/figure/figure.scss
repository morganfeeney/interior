body {
  counter-reset: figure;
}

.figure {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr var(--grid-row-gap) var(--row-height);
  scroll-snap-align: center;

  &::before {
    grid-row: 2;
    counter-increment: figure;
    content: counter(figure);
    font-size: var(--font-size-global-small);
    line-height: var(--grid-row-gap);
  }
}

.figure:last-child {
  // only works if we don't use grid gap due to a gap being added between this
  // and the content.
  &::after {
    content: "";
    // align the last-child to the edge of the overflowing container.
    width: calc((100vw - var(--container-width)) / 2);
    background: transparent;
    grid-row: 1 / span 5;
  }
}

.placeholder-image {
  --placeholder-image-width: calc((var(--column-width) * 4) + (var(--grid-gap) * 3));
  --placeholder-image-height: calc((var(--row-height) * 3) + (var(--grid-row-gap) * 2));
  background: var(--grey-tint);
  background: black;
  width: var(--placeholder-image-width);
  height: var(--placeholder-image-height);

  @media (min-width: #{$tablet}) {
    --placeholder-image-width: calc((var(--column-width) * 2) + (var(--grid-gap) * 1));
    --placeholder-image-height: calc((var(--row-height) * 2) + (var(--grid-row-gap) * 1));
  }
}

.figure_code-sample .placeholder-image {
  --placeholder-image-width: calc((var(--column-width) * 4) + (var(--grid-gap) * 3));
}

.figcaption {
  --figcaption-margin-top: -.15rem;
  grid-row: 3;
  width: calc((var(--column-width) * 4) + (var(--grid-gap) * 3));
  margin-top: var(--figcaption-margin-top);

  @media (min-width: #{$iPhoneXR}) {
    width: calc((var(--column-width) * 3) + (var(--grid-gap) * 2));
  }

  @media (min-width: #{$tablet}) {
    width: calc((var(--column-width) * 2) + (var(--grid-gap) * 1));
    margin-top: var(--figcaption-margin-top);
  }
}
